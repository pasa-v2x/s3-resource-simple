#!/bin/sh

# Resource Impl: http://concourse.ci/implementing-resources.html#out:-update-a-resource.
set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 </full/path/to/dir>"
  exit 1
fi
#######################################

ls $source

# parse incoming config data
payload=`cat`
bucket=$(echo "$payload" | jq -r '.source.bucket')
path=$(echo "$payload" | jq -r '.source.path // ""')
options=$(echo "$payload" | jq -r '.source.options // [] | join(" ")')
do_clean=$(echo "$payload" | jq -r '.source.do_clean // ""')

# export for `aws` cli
AWS_ACCESS_KEY_ID=$(echo "$payload" | jq -r '.source.access_key_id // empty')
AWS_SECRET_ACCESS_KEY=$(echo "$payload" | jq -r '.source.secret_access_key // empty')
AWS_DEFAULT_REGION=$(echo "$payload" | jq -r '.source.region // empty')
SRC_DIR=$(echo "$payload" | jq -r '.source.source // empty')

# Due to precedence rules, must be unset to support AWS IAM Roles.
if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
  export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
fi

if [ ! -z ${SRC_DIR} ]; then
    source=${source}/${SRC_DIR}
fi

# Export AWS_DEFAULT_REGION if set
[ -n "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION

if [[ -z $do_clean ]]; then
    echo "Uploading to S3..."
    eval aws s3 sync $source "s3://$bucket/$path" $options
    echo "...done."
else
    echo "Cleaning S3 bucket..."
    eval aws s3 rm "s3://$bucket/$path" $options
    echo "...done."
fi

source "$(dirname $0)/emit.sh" >&3
